
# This file was *autogenerated* from the file point_of_intersection_between_two_lines.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4)# Finding point of intersection between two lines
# by Yann Lamontagne

# Initialize variables
t=var('t');
s=var('s');

# define line 1, point and direction vector
P1=vector((-_sage_const_4 , _sage_const_5 , -_sage_const_2 ));
d1=vector((_sage_const_3 , -_sage_const_4 , _sage_const_1 ));

L1=P1+t*d1;

# define line 2, point and direction vector
P2=vector((-_sage_const_3 , _sage_const_3 , _sage_const_5 ));
d2=vector((_sage_const_4 , -_sage_const_5 , -_sage_const_2 ));

L2=P2+s*d2;

# solve for what value of t and s the lines are equal
eqn1 = L1[_sage_const_0 ]==L2[_sage_const_0 ];
eqn2 = L1[_sage_const_1 ]==L2[_sage_const_1 ];
eqn3 = L1[_sage_const_2 ]==L2[_sage_const_2 ];

soln = solve([eqn1, eqn2, eqn3],t,s,solution_dict=True);
print(soln)
# Finding the point of intersection
C = L1(t=soln[_sage_const_0 ][t]) 

print("Point of intersection of L1 and L2:")
print(C)

